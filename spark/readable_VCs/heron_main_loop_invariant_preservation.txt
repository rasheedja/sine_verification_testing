--------------------------- Local Context ---------------------------

constant Eps : t

axiom H25 : dynamic_invariant2 Eps True False True True

axiom H24 : dynamic_invariant2 X True False True True

axiom H23 : dynamic_invariant3 N True False True True

axiom H22 :
  (((ge X (0.500000000000000000000000:t) /\ le X (2.0:t)) /\ N >' 0) /\
   N <=' 5) /\
  eq Eps (0.0000001192092895507812500000000000000000000000:t)

constant Y3 : t

axiom H21 : Y3 = (1.0:t)

axiom H20 : dynamic_invariant2 Y3 True False True True

constant i2 : int

axiom H19 : i2 = 1

axiom H18 :
  andb (if 1 <=' i2 then True else False) (if i2 <=' N then True else False)
  = True

axiom H17 : t'isFinite (div_rne X Y3)

axiom H16 : t'isFinite (add RNE Y3 (div_rne X Y3))

constant Y2 : t

axiom H15 : Y2 = div_rne (add RNE Y3 (div_rne X Y3)) (2.0:t)

constant i1 : int

constant Y1 : t

axiom H14 : ge Y1 (0.699999988079071044921875:t)

axiom H13 : le Y1 (1.79999995231628417968750:t)

axiom H12 : le (abs (sub_rne X Y1)) (1.29999995231628417968750:t)

axiom H11 : i1 <=' N

axiom H10 :
  ole__logic
  (rabs__logic
   (osubtract__logic (real_square_root__logic (rf__logic X)) (rf__logic Y1)))
  (oadd__logic
   (odivide__logic (ri__logic 1)
    (real_pow__logic (ri__logic 2) (ri__logic (power 2 i1))))
   (omultiply__logic (ri__logic (6 *' i1)) (rf__logic Eps)))
  = True

axiom H9 :
  andb
  (if (((true /\ dynamic_invariant2 Y1 True True True True) /\ true) /\
       (if true \/ 1 <=' N then dynamic_property 1 N i1 else true)) /\
      true
   then True else False)
  (if 1 <=' i1 /\ i1 <=' N then True else False) = True

axiom H8 : not i1 = N

constant i : int

axiom H7 : i = (i1 +' 1)

axiom H6 : t'isFinite (div_rne X Y1)

axiom H5 : t'isFinite (add RNE Y1 (div_rne X Y1))

constant Y : t

axiom H4 : Y = div_rne (add RNE Y1 (div_rne X Y1)) (2.0:t)

axiom H3 : ge Y (0.699999988079071044921875:t)

axiom H2 : le Y (1.79999995231628417968750:t)

axiom H1 : le (abs (sub_rne X Y)) (1.29999995231628417968750:t)

axiom H : i <=' N

------------------------------- Goal --------------------------------

goal VC def :
  ole__logic
  (rabs__logic
   (osubtract__logic (real_square_root__logic (rf__logic X)) (rf__logic Y)))
  (oadd__logic
   (odivide__logic (ri__logic 1)
    (real_pow__logic (ri__logic 2) (ri__logic (power 2 i))))
   (omultiply__logic (ri__logic (6 *' i)) (rf__logic Eps)))
  = True

