Context: 
constant Eps : t

axiom Precondition:
  (((ge X (0.500000000000000000000000:t) /\ le X (2.0:t)) /\ N >' 0) /\
   N <=' 5) /\
  eq Eps (0.0000001192092895507812500000000000000000000000:t)

# Heron implementation overflow checks, etc.
constant Y3 : t
axiom H21 : Y3 = (1.0:t)
axiom H17 : t'isFinite (div_rne X Y3)
axiom H16 : t'isFinite (add RNE Y3 (div_rne X Y3))

# Y1 is Y value from previous iteration of the loop
constant Y1 : t
axiom H6 : t'isFinite (div_rne X Y1)
axiom H5 : t'isFinite (add RNE Y1 (div_rne X Y1))

# Y2 = Y3 + X/Y3
constant Y2 : t
axiom H15 : Y2 = div_rne (add RNE Y3 (div_rne X Y3)) (2.0:t)


constant i2 : int
axiom H19 : i2 = 1
axiom H18 :
  andb (if 1 <=' i2 then True else False) (if i2 <=' N then True else False)
  = True

# Loop invariants
axiom H14 : ge Y1 (0.699999988079071044921875:t)
axiom H13 : le Y1 (1.79999995231628417968750:t)
axiom H12 : le (abs (sub_rne X Y1)) (1.29999995231628417968750:t)

# So i1 < N
constant i1 : int
axiom H8 : not i1 = N
axiom H11 : i1 <=' N


# True axiom?
axiom H9 :
  andb
  (if (((true /\ dynamic_invariant2 Y1 True True True True) /\ true) /\
       (if true \/ 1 <=' N then dynamic_property 1 N i1 else true)) /\
      true
   then True else False)
  (if 1 <=' i1 /\ i1 <=' N then True else False) = True


# So 1 < i <= N
constant i : int
axiom H7 : i = (i1 +' 1)
axiom H : i <=' N

# loop invariants
constant Y : t
axiom H4 : Y = div_rne (add RNE Y1 (div_rne X Y1)) (2.0:t)
axiom H3 : ge Y (0.699999988079071044921875:t)
axiom H2 : le Y (1.79999995231628417968750:t)
axiom H1 : le (abs (sub_rne X Y)) (1.29999995231628417968750:t)

# So, to simplify, we will change the goal to an implication, with axiom H10 on the left.
# We substitute i1 with i - 1
# Y'Old = Y1 = Y value from previous iteration of the loop

Simplified goal:
  (Rabs ((Rsqrt (Rf X)) - (Rf Y'Old)) <=
    (((Ri 1) + (Rf Eps)) ^ (Ri (3 * (i - 1)))) / ((Ri 2) ^ Ri(2 ^ (i - 1)))) ->
      (Rabs ((Rsqrt (Rf X)) - (Rf Y)) <=
        (((Ri 1) + (Rf Eps)) ^ (Ri (3 * i))) / ((Ri 2) ^ Ri(2 ^ i)))
Simplified Goal:
